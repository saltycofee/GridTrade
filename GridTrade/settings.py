"""
Django settings for GridTrade project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&x^72r6q0p6qn)h*(^-s!)a&9p2_g%_bz+z@vcqqum=r#s$t#o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'trade',
    'django_apscheduler',#定时执行任务
    'gunicorn',
    'rest_framework',
    'corsheaders'

]

APSCHEDULER_DATETIME_FORMAT =  "N j, Y, f:s a"  # Default
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'formatters': {
#         'standard': {
#             'format': '%(levelname)s %(asctime)s %(message)s'   # 输出格式
#         },
#     },
#     'handlers': {
#         'visit_handlers': {     # visit_handlers : 标识（名字）
#             'level': 'INFO',    # 日志等级
#             'maxBytes': 5 * 1024 * 1024,    # 文件大小 - 这里是文件到 5M 会自动清空
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/visit_log',   # 日志存储文件
#             'formatter': 'standard',
#         },
#         'server_handlers': {
#             'level': 'ERROR',
#             'maxBytes': 5 * 1024 * 1024,
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/server_log',
#             'formatter': 'standard',
#         },
#     },
#     'loggers': {
#         'visit': {
#             'handlers': ['visit_handlers'],     # 使用哪个 handlers
#             'level': 'INFO',    # 日志等级，这里的等级要比 handlers 要高或者一致
#             'propagate': False,
#         },
#         'server': {
#             'handlers': ['server_handlers'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#     },
# }

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # cors
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CRONJOBS = [
#     ('*/5 * * * *', 'DigitalCoin.Schedule_Job.Get_Coin_Price')
# ]

CRONTAB_COMMAND_PREFIX = 'LANG_ALL=zh_cn.UTF-8'
ROOT_URLCONF = 'GridTrade.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GridTrade.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
#CORS_ORIGIN_ALLOW_ALL = True
#下面这些可以不用设置
#跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ('http://*',)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

STATIC_URL = '/static/'
STATIC_ROOT =os.path.join(BASE_DIR,"static")